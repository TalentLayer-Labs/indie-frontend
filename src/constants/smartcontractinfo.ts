
const contractAddress = "0xBd6c1f777A714537E3c85C8C9a2BfDC006CDD3B8"
const abi = [{ "inputs": [], "stateMutability": "payable", "type": "constructor" }, { "inputs": [{ "internalType": "enum AuthType", "name": "authType", "type": "uint8" }], "name": "AuthTypeNotFoundInVerifiedResult", "type": "error" }, { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "address", "name": "contributor", "type": "address" }], "name": "verifiedGithubContributor", "type": "event" }, { "inputs": [], "name": "ADDRESSES_PROVIDER_V2", "outputs": [{ "internalType": "contract IAddressesProvider", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "APP_ID", "outputs": [{ "internalType": "bytes16", "name": "", "type": "bytes16" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "GROUP_ID", "outputs": [{ "internalType": "bytes16", "name": "", "type": "bytes16" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "SISMO_CONNECT_LIB_VERSION", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "bool", "name": "isSelectableByUser", "type": "bool" }], "name": "buildSignature", "outputs": [{ "components": [{ "internalType": "bytes", "name": "message", "type": "bytes" }, { "internalType": "bool", "name": "isSelectableByUser", "type": "bool" }, { "internalType": "bytes", "name": "extraData", "type": "bytes" }], "internalType": "struct SignatureRequest", "name": "", "type": "tuple" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "bytes", "name": "message", "type": "bytes" }, { "internalType": "bytes", "name": "extraData", "type": "bytes" }], "name": "buildSignature", "outputs": [{ "components": [{ "internalType": "bytes", "name": "message", "type": "bytes" }, { "internalType": "bool", "name": "isSelectableByUser", "type": "bool" }, { "internalType": "bytes", "name": "extraData", "type": "bytes" }], "internalType": "struct SignatureRequest", "name": "", "type": "tuple" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "bool", "name": "isSelectableByUser", "type": "bool" }, { "internalType": "bytes", "name": "extraData", "type": "bytes" }], "name": "buildSignature", "outputs": [{ "components": [{ "internalType": "bytes", "name": "message", "type": "bytes" }, { "internalType": "bool", "name": "isSelectableByUser", "type": "bool" }, { "internalType": "bytes", "name": "extraData", "type": "bytes" }], "internalType": "struct SignatureRequest", "name": "", "type": "tuple" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "bytes", "name": "message", "type": "bytes" }, { "internalType": "bool", "name": "isSelectableByUser", "type": "bool" }, { "internalType": "bytes", "name": "extraData", "type": "bytes" }], "name": "buildSignature", "outputs": [{ "components": [{ "internalType": "bytes", "name": "message", "type": "bytes" }, { "internalType": "bool", "name": "isSelectableByUser", "type": "bool" }, { "internalType": "bytes", "name": "extraData", "type": "bytes" }], "internalType": "struct SignatureRequest", "name": "", "type": "tuple" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "bytes", "name": "sismoResponse", "type": "bytes" }], "name": "checkSismoGithub", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "name": "config", "outputs": [{ "internalType": "bytes16", "name": "appId", "type": "bytes16" }, { "components": [{ "internalType": "bool", "name": "isImpersonationMode", "type": "bool" }], "internalType": "struct VaultConfig", "name": "vault", "type": "tuple" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "owner", "outputs": [{ "internalType": "address payable", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }]

export { contractAddress, abi }